from matplotlib import pyplot as plt
import numpy as np
import datetime

img = plt.imread("/Users/ruurbach/Downloads/signal-2024-03-03-080729_002.jpeg")

#plt.scatter(range(50, 1510, 3.5), len(range(50, 1510, 3.5))*[180], alpha=0.3)
xs = np.arange(49, 1510, 3.15)
plt.imshow(img); [plt.axvline(x=xe) for xe in xs]; plt.show()

ys = np.argmin(img[:, [round(x) for x in xs], 0], axis=0)

plt.scatter(xs, ys, s=1.3)
plt.imshow(img); plt.scatter(xs, ys, s=1.3); plt.show()

scores = (194 - ys).astype(np.float32)
scores *= (2000/55)


datetime.datetime.now() - datetime.timedelta(days=len(scores))
# >> datetime.datetime(2022, 11, 25, 15, 47, 24, 74981)
# 3613.166
"""
In [160]: scores
Out[160]:
array([ 218.18182,    0.     ,  436.36365,  400.     ,  400.     ,
        545.4545 ,  400.     ,  618.1818 ,  654.5455 ,  618.1818 ,
        690.90906, 1054.5454 ,  836.36365, 1090.909  , 1163.6364 ,
        836.36365, 1054.5454 , 1054.5454 ,  945.4545 , 1672.7273 ,
        981.8182 ,  690.90906,  763.63635, 1054.5454 , 1200.     ,
       1381.8181 , 1309.091  , 1490.909  , 1490.909  , 1418.1818 ,
       1636.3636 , 1418.1818 , 1272.7273 , 1563.6364 , 1054.5454 ,
       1527.2727 , 2036.3636 , 1745.4546 , 2036.3636 , 1927.2727 ,
       1236.3636 , 1709.091  , 2218.182  , 2000.     , 1963.6364 ,
       1818.1818 , 1418.1818 , 2400.     , 1709.091  , 1636.3636 ,
       2000.     , 1854.5454 , 1418.1818 , 2145.4546 , 2145.4546 ,
       2145.4546 , 2145.4546 , 2400.     , 2181.818  , 2545.4546 ,
       2254.5454 , 1745.4546 , 1709.091  , 2218.182  , 2690.9092 ,
       3054.5454 , 2690.9092 , 2254.5454 , 2109.0908 , 2109.0908 ,
       2327.2727 , 2618.182  , 3018.182  , 2836.3635 , 2872.7273 ,
       2836.3635 , 2436.3635 , 2290.9092 , 2509.0908 , 2800.     ,
       3163.6362 , 2981.818  , 2800.     , 2654.5454 , 2654.5454 ,
       2945.4546 , 2763.6362 , 2690.9092 , 2545.4546 , 2581.818  ,
       2690.9092 , 2727.2727 , 2872.7273 , 3090.9092 , 2581.818  ,
       1890.909  , 2763.6362 , 2981.818  , 2800.     , 2836.3635 ,
       2945.4546 , 3127.2727 , 3309.0908 , 3127.2727 , 3272.7273 ,
       3381.818  , 3454.5454 , 3672.7273 , 3854.5454 , 3418.182  ,
       3163.6362 , 3236.3635 , 3309.0908 , 3672.7273 , 3890.909  ,
       3200.     , 2981.818  , 3018.182  , 3345.4546 , 3309.0908 ,
       2836.3635 , 2945.4546 , 3454.5454 , 3236.3635 , 3563.6362 ,
       3090.9092 , 3200.     , 3563.6362 , 2727.2727 , 3309.0908 ,
       3272.7273 , 2981.818  , 3200.     , 3490.9092 , 3454.5454 ,
       3927.2727 , 4072.7273 , 3527.2727 , 3745.4546 , 3672.7273 ,
       2945.4546 , 3309.0908 , 3600.     , 3127.2727 , 3963.6362 ,
       3490.9092 , 3381.818  , 3127.2727 , 3454.5454 , 3709.0908 ,
       3890.909  , 3272.7273 , 3490.9092 , 3490.9092 , 3490.9092 ,
       2727.2727 , 3600.     , 2400.     , 2945.4546 , 4290.909  ,
       3345.4546 , 3963.6362 , 3745.4546 , 2945.4546 , 3272.7273 ,
       3709.0908 , 3345.4546 , 3418.182  , 4000.     , 3563.6362 ,
       4000.     , 3163.6362 , 2363.6362 , 3163.6362 , 3418.182  ,
       4363.636  , 3709.0908 , 3854.5454 , 4290.909  , 3381.818  ,
       3454.5454 , 4290.909  , 3527.2727 , 4145.4546 , 3672.7273 ,
       3709.0908 , 3709.0908 , 3890.909  , 4000.     , 3563.6362 ,
       3454.5454 , 2836.3635 , 3418.182  , 3745.4546 , 3818.182  ,
       3563.6362 , 3600.     , 3600.     , 3600.     , 3854.5454 ,
       3563.6362 , 3854.5454 , 3454.5454 , 3600.     , 4072.7273 ,
       3781.818  , 3709.0908 , 3600.     , 3636.3635 , 3890.909  ,
       3818.182  , 3309.0908 , 3745.4546 , 3709.0908 , 3854.5454 ,
       4000.     , 3854.5454 , 3454.5454 , 3381.818  , 3890.909  ,
       3709.0908 , 3854.5454 , 4181.8184 , 4036.3635 , 4145.4546 ,
       4290.909  , 4290.909  , 3927.2727 , 3709.0908 , 3454.5454 ,
       2981.818  , 3600.     , 3745.4546 , 4181.8184 , 4581.8184 ,
       4436.364  , 3890.909  , 3672.7273 , 3672.7273 , 3490.9092 ,
       3381.818  , 3454.5454 , 3636.3635 , 4036.3635 , 4000.     ,
       3745.4546 , 4036.3635 , 4436.364  , 4072.7273 , 3781.818  ,
       4145.4546 , 3854.5454 , 4254.5454 , 3745.4546 , 3745.4546 ,
       4036.3635 , 3963.6362 , 3163.6362 , 3563.6362 , 3672.7273 ,
       3745.4546 , 4181.8184 , 3781.818  , 3600.     , 3490.9092 ,
       3600.     , 3600.     , 3563.6362 , 4072.7273 , 3563.6362 ,
       4072.7273 , 4036.3635 , 4363.636  , 4363.636  , 4181.8184 ,
       4581.8184 , 3600.     , 3527.2727 , 3672.7273 , 4072.7273 ,
       4290.909  , 3672.7273 , 4472.727  , 4218.1816 , 3309.0908 ,
       4145.4546 , 4509.091  , 4109.091  , 4072.7273 , 3672.7273 ,
       4290.909  , 3818.182  , 3745.4546 , 4254.5454 , 4181.8184 ,
       4000.     , 3927.2727 , 4436.364  , 3672.7273 , 4472.727  ,
       3745.4546 , 4072.7273 , 3818.182  , 3345.4546 , 4000.     ,
       4036.3635 , 3563.6362 , 4909.091  , 3745.4546 , 4363.636  ,
       3272.7273 , 3309.0908 , 4509.091  , 4727.2725 , 3672.7273 ,
       4145.4546 , 4727.2725 , 4618.1816 , 3745.4546 , 4072.7273 ,
       3854.5454 , 4363.636  , 4254.5454 , 4290.909  , 4727.2725 ,
       4036.3635 , 4109.091  , 4545.4546 , 4181.8184 , 3890.909  ,
       4072.7273 , 4290.909  , 4218.1816 , 4036.3635 , 3672.7273 ,
       3454.5454 , 3890.909  , 4800.     , 4145.4546 , 3854.5454 ,
       4254.5454 , 4363.636  , 4181.8184 , 4145.4546 , 4036.3635 ,
       4254.5454 , 4000.     , 3781.818  , 4327.2725 , 4509.091  ,
       4472.727  , 4581.8184 , 4290.909  , 4145.4546 , 4436.364  ,
       4472.727  , 4181.8184 , 4727.2725 , 3563.6362 , 3854.5454 ,
       4254.5454 , 4181.8184 , 3854.5454 , 4000.     , 4290.909  ,
       4690.909  , 5054.5454 , 4727.2725 , 4327.2725 , 4327.2725 ,
       4545.4546 , 4254.5454 , 4472.727  , 4763.636  , 5054.5454 ,
       5309.091  , 4836.364  , 4618.1816 , 4945.4546 , 4690.909  ,
       4800.     , 5054.5454 , 4872.727  , 4400.     , 4727.2725 ,
       5527.2725 , 5490.909  , 5309.091  , 5309.091  , 4981.8184 ,
       4727.2725 , 4872.727  , 4945.4546 , 4690.909  , 4945.4546 ,
       5018.1816 , 5018.1816 , 4363.636  , 4727.2725 , 5018.1816 ,
       4727.2725 , 4872.727  , 4690.909  , 4800.     , 5018.1816 ,
       5200.     , 4763.636  , 4872.727  , 5127.2725 , 5018.1816 ,
       4690.909  , 5563.636  , 5745.4546 , 5418.1816 , 5200.     ,
       4436.364  , 4145.4546 , 4909.091  , 5163.636  , 4872.727  ,
       4945.4546 , 5527.2725 , 5309.091  , 5163.636  , 5490.909  ,
       5163.636  , 4472.727  , 4581.8184 , 4800.     , 5127.2725 ,
       5054.5454 , 4800.     , 4072.7273 , 5054.5454 , 4763.636  ,
       5418.1816 , 4472.727  , 5309.091  , 4727.2725 , 4727.2725 ,
       5090.909  , 5127.2725 , 5054.5454 , 5054.5454 , 5200.     ,
       5381.8184 , 4727.2725 , 4909.091  , 4945.4546 , 5309.091  ,
       5418.1816 , 5309.091  , 5636.364  , 5345.4546 , 4145.4546 ,
       5054.5454 , 5418.1816 , 5418.1816 , 5272.727  , 5345.4546 ,
       5418.1816 , 4909.091  , 5090.909  , 2000.     ], dtype=float32)
"""


def running_average(arr, window_size):
    return np.convolve(arr, np.ones(window_size), 'valid') / window_size

[plt.plot(running_average(scores, i)) for i in range(3, 19, 3)]
plt.show()
